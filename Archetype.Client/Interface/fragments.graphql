fragment CardPool on ICardPool{
    sets{
        name
        cards{
            ...CardProtoData
        }
    }
}

fragment CardProtoData on ICardProtoData {
    guid
    cost
    rulesText
    metaData{
        ...CardMetaData
    }
    targets{
        ...Target
    }
    effects{
        ...Effect
    }
}

fragment GameState on IGameState {
    player{
        ...Player
    }
    map{
        ...Map
    }
}

fragment Map on IMap{
    nodes{
        ...MapNode
    }
}
fragment MapNode on IMapNode{
    ...UnitZone
    neighbours{
        guid
    }
}

fragment Player on IPlayer{
    ...Atom
    name
    maxHandSize
    minDeckSize
    resources
    deck{
        ...Deck
    }
    hand{
        ...Hand
    }
    discardPile{
        ...Discard
    }
}

fragment CardZone on IZoneOfICard{
    ...Atom
    contents{
        ...Card
    }
}

fragment UnitZone on IZoneOfIUnit{
    ...Atom
    contents{
        ...Unit
    }
}

fragment Deck on IDeck{
    ...CardZone
}

fragment Discard on IDiscardPile{
    ...CardZone
}

fragment Hand on IHand {
    ...CardZone
}

fragment Card on Card {
    ...Atom
    protoGuid
    cost
    rulesText
    contextRulesText
    metaData{
        ...CardMetaData
    }
    targets{
        ...Target
    }
    effects{
        ...Effect
    }
}

fragment Unit on IUnit {
    ...Atom
    protoGuid
    deck{
        ...Deck
    }
    metaData{
        ...UnitMetaData
    }
}

fragment Target on ITarget{
    typeId
}

fragment Effect on IEffect{
    targetIndex
}

fragment CardMetaData on CardMetaData {
    name
    setName
    rarity
    color
    imageUri
}

fragment UnitMetaData on UnitMetaData {
    name
    imageUri
}

fragment Atom on IGameAtom {
    guid
    owner {
        guid
    }
}